/**
 * Loft Labels jQuery Plugin v1.0.0
 * http://www.intheloftstudios.com/packages/js/loft-labels
 *
 * jQuery plugin to move labels into the input element as placeholders with optional lightweight input validation.
 *
 * Copyright 2013-2018,
 * @license MIT
 *
 * Date: Fri Dec 14 15:50:43 PST 2018
 */
!function(t){"function"==typeof define&&define.amd?define(["jquery"],t):"object"==typeof module&&module.exports?module.exports=function(e,l){return void 0===l&&(l="undefined"!=typeof window?require("jquery"):require("jquery")(e)),t(l),l}:t(jQuery)}(function(t){"use strict";var e="loftLabels";t.fn.loftLabels=function(l){this.settings=t.extend({},t.fn.loftLabels.defaults,l);var i=t(this);if(0!==i.length){var n=function(l,i){var n=l.settings;if(n.validation){var s=0;a.each(function(){var l=t(this),a=l.data(e);if(a){var o=l.val(),u=a?a.isDefault():!0;!o||u?"function"==typeof n.onNotValid&&n.onNotValid.call(a,o,i):(s++,"function"==typeof n.onValid&&n.onValid.call(a,o,i))}}),s===a.length&&"function"==typeof n.onAllValid&&n.onAllValid.call(l,i)}},s=t.extend({},t.fn.loftLabels.defaults,l),a=s.validation===!0?i:s.validation;return i.not("."+s.cssPrefix+"-processed").addClass(s.cssPrefix+"-processed").each(function(){var l,i=this,o=t(this),u={el:i,$el:o,$validation:a,defaultText:null,settings:s,states:[],init:function(){var e=s.labelSelector.call(this,this.$el),l="",i=this.$el.get(0).tagName.toLowerCase();return"textarea"===i&&(l=this.$el.text()),e.length&&(l=t.trim(e.text()),e.hide()),this.defaultText=s.callback?s.callback.call(this,l):l,e.length&&e.text(this.defaultText),this.value()?(this.$el.addClass(s.focus),t(this)):(this["default"](),this.$el.removeClass(s.focus),this.render(),n(this,{type:"init"}),"function"==typeof s.onInit&&s.onInit(this),this)},value:function(){return t.trim(o.val())},isDefault:function(){return this.value()===this.defaultText},clear:function(){return this.isDefault()&&(o.val(""),this.render()),this},unclear:function(){return!this.value()&&this.defaultText&&this["default"](),this},"default":function(){return o.val()!==this.defaultText&&(o.val(this.defaultText),this.render()),this},render:function(){var t=[],e=[];return this.states.hover?t.push(s.hover):e.push(s.hover),this.states.focus?t.push(s.focus):e.push(s.focus),this.isDefault()?t.push(s["default"]):e.push(s["default"]),t&&this.$el.addClass(t.join(" ")),e&&this.$el.removeClass(e.join(" ")),this}};o.data(e,u),u.init(),o.bind("focus",function(){u.states.focus=!0,u.clear()}).bind("blur",function(){u.states.focus=!1,u.unclear()}).hover(function(){u.states.hover=!0,u.render()},function(){u.states.hover=!1,u.render()}).bind("keyup paste",function(){u.render()}).bind(u.settings.validationEvents,function(t){clearTimeout(l),l=setTimeout(function(){n(u,t)},s.validationThrottle)}).data(e,u)}),this}},t.fn.loftLabels.version=function(){return"1.0.0"},t.fn.loftLabels.defaults={focus:"loft-labels-is-focus",hover:"loft-labels-is-hover","default":"loft-labels-is-default",cssPrefix:"loft-labels",callback:null,onInit:null,validation:!1,validationEvents:"blur paste keyup",validationThrottle:100,onAllValid:null,onValid:null,onNotValid:null,labelSelector:function(e){var l=e.attr("id"),i=t("label[for="+l+"]");return i.length?i:e.siblings("label").first()}},t.fn.loftLabels.prototype.destroy=function(){this.$el.removeData(e)}});