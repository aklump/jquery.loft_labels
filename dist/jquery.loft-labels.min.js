/**
 * Loft Labels jQuery Plugin v1.1.0
 * http://www.intheloftstudios.com/packages/js/jquery.loft_labels
 *
 * jQuery plugin to move labels into the input element as placeholders with optional lightweight input validation.
 *
 * Copyright 2013-2018,
 * @license MIT
 *
 * Date: Sat Dec 15 08:37:31 PST 2018
 */
!function(t){"function"==typeof define&&define.amd?define(["jquery"],t):"object"==typeof module&&module.exports?module.exports=function(e,l){return void 0===l&&(l="undefined"!=typeof window?require("jquery"):require("jquery")(e)),t(l),l}:t(jQuery)}(function(t){"use strict";function e(t){t.hasPlaceholderText=t.isDefault()||!t.getValue()}function l(){var l=this.settings,a=this.$el.get(0).tagName.toLowerCase();return this.$label=l.labelSelector.call(this,this.$el),"textarea"===a&&(this.defaultText=this.$el.text()),this.$label.length&&(this.defaultText=this.$label.text(),this.$label.hide()),this.defaultText=t.trim(this.defaultText),this.defaultText=l.callback?l.callback.call(this,this.defaultText):this.defaultText,this.getValue()?(this.$el.addClass(l.focus),t(this)):(this.setValue(this.getLabel()),this.$el.removeClass(l.focus),i.call(this),n(this,{type:"init"},this.$validation),"function"==typeof l.onInit&&l.onInit(this),e(this),this)}function a(t){return t.hasPlaceholderText?(t.$el.val(t.getLabel()),i.call(t),this):void 0}function i(){var t=[],e=[],l=this.settings;return this.states.hover?t.push(l.hover):e.push(l.hover),this.states.focus?t.push(l.focus):e.push(l.focus),this.isDefault()?t.push(l["default"]):e.push(l["default"]),t&&this.$el.addClass(t.join(" ")),e&&this.$el.removeClass(e.join(" ")),this}var s="loftLabels";t.fn.loftLabels=function(o){this.settings=t.extend({},t.fn.loftLabels.defaults,o);var u=t(this);if(0!==u.length){var f=t.extend({},t.fn.loftLabels.defaults,o),r=f.validation===!0?u:f.validation;return u.not("."+f.cssPrefix+"-processed").addClass(f.cssPrefix+"-processed").each(function(){var o,u=t(this),h={$el:u,$validation:r,defaultText:null,settings:f,hasPlaceholderText:null,states:[],setValue:function(t){return this.$el.val(t).keyup(),i.call(this),this},getValue:function(){return t.trim(this.$el.val())},getLabel:function(){var t=this.defaultText;if(this.segment)var e="data-"+this.settings.dataPrefix+this.segment.name,t=this.$label.attr(e)||t;return t},isDefault:function(){return this.getValue()===this.defaultText}};u.data(s,h),l.call(h),e(h),u.bind("focus",function(){h.hasPlaceholderText||e(h),h.states.focus=!0,h.hasPlaceholderText&&(u.val(""),i.call(h))}).bind("blur",function(){e(h),h.states.focus=!1,a(h)}).hover(function(){h.states.hover=!0,i.call(h)},function(){h.states.hover=!1,i.call(h)}).bind("keyup paste",function(){e(h),h.value&&i.call(h)}).bind(h.settings.validationEvents,function(t){clearTimeout(o),o=setTimeout(function(){n(h,t,r)},f.validationThrottle)}).data(s,h)}),this.settings.breakpointX&&this.settings.breakpointX.addCrossAction(function(e){u.each(function(){var l=t(this).data("loftLabels");l.segment=e,a(l)})}).triggerActions(),this}},t.fn.loftLabels.version=function(){return"1.1.0"},t.fn.loftLabels.defaults={focus:"loft-labels-is-focus",hover:"loft-labels-is-hover","default":"loft-labels-is-default",cssPrefix:"loft-labels",dataPrefix:"label-",breakpointX:null,callback:null,onInit:null,validation:!1,validationEvents:"blur paste keyup",validationThrottle:100,onAllValid:null,onValid:null,onNotValid:null,labelSelector:function(e){var l=e.attr("id"),a=t("label[for="+l+"]");return a.length?a:e.siblings("label").first()}},t.fn.loftLabels.prototype.destroy=function(){this.$el.removeData(s)};var n=function(e,l,a){var i=e.settings;if(i.validation){var n=0;a.each(function(){var e=t(this),a=e.data(s);if(a){var o=e.val(),u=a?a.isDefault():!0;!o||u?"function"==typeof i.onNotValid&&i.onNotValid.call(a,o,l):(n++,"function"==typeof i.onValid&&i.onValid.call(a,o,l))}}),n===a.length&&"function"==typeof i.onAllValid&&i.onAllValid.call(e,l)}}});