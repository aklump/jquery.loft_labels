/**
 * Loft Labels jQuery JavaScript Plugin v0.7.4
 * http://www.intheloftstudios.com/packages/jquery/jquery.loft_labels
 *
 * jQuery plugin to move textfield labels into the input element itself as the default values.
 *
 * Copyright 2013-2017,
 * @license [name]Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Tue Apr  4 11:53:18 PDT 2017
 */
!function($){"use strict";$.loftLabels={instances:[]},$.fn.loftLabels=function(t){var e=$(this),l=function(t,e){var l=t.settings;if(l.validationGroup){var s=$.loftLabels.instances[l.validationGroup],a=!0;for(var n in s)if(!s[n].value()||s[n].isDefault()){a=!1;break}a?l.onValid&&l.onValid.call(t,e,s):l.onNotValid&&l.onNotValid.call(t,e,s)}};if(0!==e.length){var s=$.extend({},$.fn.loftLabels.defaults,t),a=s.validationGroup||"global";return $.loftLabels.instances[a]=$.loftLabels.instances[a]||[],e.not("."+s.cssPrefix+"-processed").addClass(s.cssPrefix+"-processed").each(function(){var t=this,e=$(this),n={el:t,$el:e,defaultText:null,settings:s,states:[],init:function(){var t=s.labelSelector.call(this,this.$el),e="",a=this.$el.get(0).tagName.toLowerCase(),n=this;return"textarea"===a&&(e=this.$el.text()),t.length&&(e=$.trim(t.text()),t.hide()),s.breakpointX&&s.breakpointDefaultText&&(e=s.breakpointDefaultText.call(n,{name:s.breakpointX.current}),s.breakpointX.add("both",s.breakpointX.aliases,function(t,e){n.clear(),n.defaultText=s.breakpointDefaultText.call(n,e.name),n.unclear()})),this.defaultText=s.callback?s.callback.call(this,e):e,t.length&&t.text(this.defaultText),this.value()?(this.$el.addClass(s.focus),$(this)):(this.default(),this.$el.removeClass(s.focus),this.render(),l(this,{type:"init"}),s.onInit&&s.onInit(this),this)},value:function(){return $.trim(e.val())},isDefault:function(){return this.value()===this.defaultText},clear:function(){return this.isDefault()&&(e.val(""),this.render()),this},unclear:function(){return!this.value()&&this.defaultText&&this.default(),this},default:function(){return e.val()!==this.defaultText&&(e.val(this.defaultText),this.render()),this},render:function(){var t=[],e=[];return this.states.hover?t.push(s.hover):e.push(s.hover),this.states.focus?t.push(s.focus):e.push(s.focus),this.isDefault()?t.push(s.default):e.push(s.default),t&&this.$el.addClass(t.join(" ")),e&&this.$el.removeClass(e.join(" ")),this}};$.loftLabels.instances[a].push(n),n.init(),e.bind("focus",function(){n.states.focus=!0,n.clear()}).bind("blur",function(){n.states.focus=!1,n.unclear()}).hover(function(){n.states.hover=!0,n.render()},function(){n.states.hover=!1,n.render()}).bind("keyup paste",function(){n.render()}).bind(n.settings.validationEvents,function(t){l(n,t)}).data("loftLabels",n)}),this}},$.fn.loftLabels.defaults={focus:"loft-labels-is-focus",hover:"loft-labels-is-hover",default:"loft-labels-is-default",cssPrefix:"loft-labels",callback:null,onInit:null,validationGroup:null,validationEvents:"blur paste keyup",onValid:null,onNotValid:null,labelSelector:function(t){return t.siblings("label").first()},breakpointX:null,breakpointDefaultText:null},$.fn.loftLabels.version=function(){return"0.7.4"}}(jQuery);