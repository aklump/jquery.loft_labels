function assertInstance(t,a){t.ok(a.defaultText),t.strictEqual("object",typeof a.el),t.strictEqual("object",typeof a.$el),t.strictEqual("object",typeof a.settings),t.strictEqual("function",typeof a.init),t.strictEqual("function",typeof a.value),t.strictEqual("function",typeof a.clear),t.strictEqual("function",typeof a.unclear),t.strictEqual("function",typeof a["default"])}QUnit.test("Test instance.clear/unclear",function(t){var a=$("#loft-labels-a input"),l=[],e="Type to search...";a.loftLabels({},l);var s=l[0];s.clear(),t.strictEqual("",s.$el.val()),s.unclear(),t.strictEqual(e,s.$el.val()),s.$el.val("not default"),s.clear(),t.strictEqual("not default",s.$el.val()),s.unclear(),t.strictEqual("not default",s.$el.val()),s["default"](),t.strictEqual(e,s.$el.val())}),QUnit.test("Test using the instance returned.",function(t){var a=$("#loft-labels-a input"),l=[],e="Type to search...";a.loftLabels({},l),t.strictEqual(1,l.length);var s=l[0];assertInstance(t,s),t.strictEqual(e,s.$el.val()),t.strictEqual(e,$(s.el).val()),t.strictEqual(e,s.defaultText)}),QUnit.test("Test the onInit callback.",function(t){var a=$("#loft-labels-a input"),l=t.async();a.loftLabels({onInit:function(a){t.strictEqual("Type to search...",a.defaultText),assertInstance(t,a),l()}})}),QUnit.test("Test the default value callback.",function(t){var a=$("#loft-labels-a input"),l=t.async(),e=t.async();a.loftLabels({callback:function(a){return t.strictEqual("Type to search...",a),l(),"Breakfast time!"}}),setTimeout(function(){t.strictEqual("Breakfast time!",a.val()),e()},10)}),QUnit.test("Check custom classes on focus, blur and hover.",function(t){var a=$("#loft-labels-a input");a.loftLabels({focus:"highlight",hover:"over"}),a.focus(),t.strictEqual("",a.val()),t.strictEqual(!0,a.hasClass("highlight")),a.blur(),t.strictEqual(!1,a.hasClass("highlight")),a.trigger("mouseenter"),t.strictEqual(!0,a.hasClass("over")),a.trigger("mouseleave"),t.strictEqual(!1,a.hasClass("over"))}),QUnit.test("Check default classes on focus, blur and hover.",function(t){var a=$("#loft-labels-a input");a.loftLabels(),a.focus(),t.strictEqual("",a.val()),t.strictEqual(!0,a.hasClass("focus")),a.blur(),t.strictEqual(!1,a.hasClass("focus")),a.trigger("mouseenter"),t.strictEqual(!0,a.hasClass("hover")),a.trigger("mouseleave"),t.strictEqual(!1,a.hasClass("hover"))}),QUnit.test("Using custom css prefix handles label correctly.",function(t){var a=$("#loft-labels-a input");a.loftLabels({cssPrefix:"do-re-mi-"}),t.ok($("#loft-labels-a>label").is(":hidden")),t.strictEqual("Type to search...",a.val()),t.ok(a.hasClass("do-re-mi--processed"))}),QUnit.test("Simple usage (no args) handles label correctly.",function(t){var a=$("#loft-labels-a input");a.loftLabels(),t.ok($("#loft-labels-a>label").is(":hidden")),t.strictEqual("Type to search...",a.val()),t.ok(a.hasClass("loft-labels-processed"))}),QUnit.testStart(function(t){var a=$('<form id="loft-labels-a"><label for="search">Type to search...</label><input type="text" id="search" name="search" value=""/></form>');$("#testing-markup").html(a)}),QUnit.done(function(){$("#testing-markup").html("")});