/**
 * Loft Labels jQuery JavaScript Plugin v0.8
 * http://www.intheloftstudios.com/packages/jquery/jquery.loft_labels
 *
 * jQuery plugin to move textfield labels into the input element itself as the default values.
 *
 * Copyright 2013-2017,
 * @license [name]Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Tue Aug  1 14:39:26 PDT 2017
 */
!function($){"use strict";$.fn.loftLabels=function(t){var e=$(this);if(0!==e.length){var l=function(t,e){var l=t.settings;if(l.validation){var a=!0;i.each(function(){var t=$(this),i=t.data("loftLabels"),n=t.val(),s=!i||i.isDefault();!n||s?(l.onNotValid&&l.onNotValid.call(i,t,s,n,e),a=!1):l.onValid&&l.onValid.call(i,t,n,e)}),a&&l.onAllValid&&l.onAllValid.call(t,e)}},a=$.extend({},$.fn.loftLabels.defaults,t),i=!0===a.validation?e:a.validation;return e.not("."+a.cssPrefix+"-processed").addClass(a.cssPrefix+"-processed").each(function(){var t=this,e=$(this),n,s={el:t,$el:e,$validation:i,defaultText:null,settings:a,states:[],init:function(){var t=a.labelSelector.call(this,this.$el),e="",i=this.$el.get(0).tagName.toLowerCase(),n=this;return"textarea"===i&&(e=this.$el.text()),t.length&&(e=$.trim(t.text()),t.hide()),a.breakpointX&&a.breakpointDefaultText&&(e=a.breakpointDefaultText.call(n,a.breakpointX.current,a.breakpointX.value(a.breakpointX.current),a.breakpointX),a.breakpointX.add("both",a.breakpointX.aliases,function(t,e){n.clear(),n.defaultText=a.breakpointDefaultText.call(n,e.name,a.breakpointX.value(e.name),a.breakpointX),n.unclear()})),this.defaultText=a.callback?a.callback.call(this,e):e,t.length&&t.text(this.defaultText),this.value()?(this.$el.addClass(a.focus),$(this)):(this.default(),this.$el.removeClass(a.focus),this.render(),l(this,{type:"init"}),a.onInit&&a.onInit(this),this)},value:function(){return $.trim(e.val())},isDefault:function(){return this.value()===this.defaultText},clear:function(){return this.isDefault()&&(e.val(""),this.render()),this},unclear:function(){return!this.value()&&this.defaultText&&this.default(),this},default:function(){return e.val()!==this.defaultText&&(e.val(this.defaultText),this.render()),this},render:function(){var t=[],e=[];return this.states.hover?t.push(a.hover):e.push(a.hover),this.states.focus?t.push(a.focus):e.push(a.focus),this.isDefault()?t.push(a.default):e.push(a.default),t&&this.$el.addClass(t.join(" ")),e&&this.$el.removeClass(e.join(" ")),this}};e.data("loftLabels",s),s.init(),e.bind("focus",function(){s.states.focus=!0,s.clear()}).bind("blur",function(){s.states.focus=!1,s.unclear()}).hover(function(){s.states.hover=!0,s.render()},function(){s.states.hover=!1,s.render()}).bind("keyup paste",function(){s.render()}).bind(s.settings.validationEvents,function(t){clearTimeout(n),n=setTimeout(function(){l(s,t)},a.validationThrottle)}).data("loftLabels",s)}),this}},$.fn.loftLabels.defaults={focus:"loft-labels-is-focus",hover:"loft-labels-is-hover",default:"loft-labels-is-default",cssPrefix:"loft-labels",callback:null,onInit:null,validation:!1,validationEvents:"blur paste keyup",validationThrottle:100,onAllValid:null,onValid:null,onNotValid:null,labelSelector:function(t){return t.siblings("label").first()},breakpointX:null,breakpointDefaultText:null},$.fn.loftLabels.version=function(){return"0.8"}}(jQuery);