/**
 * Loft Labels jQuery JavaScript Plugin v0.7.6
 * http://www.intheloftstudios.com/packages/jquery/jquery.loft_labels
 *
 * jQuery plugin to move textfield labels into the input element itself as the default values.
 *
 * Copyright 2013-2017,
 * @license [name]Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Thu May 18 10:32:09 PDT 2017
 */
!function($){"use strict";$.loftLabels={instances:[]},$.fn.loftLabels=function(t){var e=$(this),l=function(t,e){var l=t.settings;if(l.validationGroup){var a=$.loftLabels.instances[l.validationGroup],s=!0;for(var i in a)if(!a[i].value()||a[i].isDefault()){s=!1;break}s?l.onValid&&l.onValid.call(t,e,a):l.onNotValid&&l.onNotValid.call(t,e,a)}};if(0!==e.length){var a=$.extend({},$.fn.loftLabels.defaults,t),s=a.validationGroup||"global";return $.loftLabels.instances[s]=$.loftLabels.instances[s]||[],e.not("."+a.cssPrefix+"-processed").addClass(a.cssPrefix+"-processed").each(function(){var t=this,e=$(this),i,n={el:t,$el:e,defaultText:null,settings:a,states:[],init:function(){var t=a.labelSelector.call(this,this.$el),e="",s=this.$el.get(0).tagName.toLowerCase(),i=this;return"textarea"===s&&(e=this.$el.text()),t.length&&(e=$.trim(t.text()),t.hide()),a.breakpointX&&a.breakpointDefaultText&&(e=a.breakpointDefaultText.call(i,{name:a.breakpointX.current}),a.breakpointX.add("both",a.breakpointX.aliases,function(t,e){i.clear(),i.defaultText=a.breakpointDefaultText.call(i,e.name),i.unclear()})),this.defaultText=a.callback?a.callback.call(this,e):e,t.length&&t.text(this.defaultText),this.value()?(this.$el.addClass(a.focus),$(this)):(this.default(),this.$el.removeClass(a.focus),this.render(),l(this,{type:"init"}),a.onInit&&a.onInit(this),this)},value:function(){return $.trim(e.val())},isDefault:function(){return this.value()===this.defaultText},clear:function(){return this.isDefault()&&(e.val(""),this.render()),this},unclear:function(){return!this.value()&&this.defaultText&&this.default(),this},default:function(){return e.val()!==this.defaultText&&(e.val(this.defaultText),this.render()),this},render:function(){var t=[],e=[];return this.states.hover?t.push(a.hover):e.push(a.hover),this.states.focus?t.push(a.focus):e.push(a.focus),this.isDefault()?t.push(a.default):e.push(a.default),t&&this.$el.addClass(t.join(" ")),e&&this.$el.removeClass(e.join(" ")),this}};$.loftLabels.instances[s].push(n),n.init(),e.bind("focus",function(){n.states.focus=!0,n.clear()}).bind("blur",function(){n.states.focus=!1,n.unclear()}).hover(function(){n.states.hover=!0,n.render()},function(){n.states.hover=!1,n.render()}).bind("keyup paste",function(){n.render()}).bind(n.settings.validationEvents,function(t){clearTimeout(i),i=setTimeout(function(){l(n,t)},a.validationThrottle)}).data("loftLabels",n)}),this}},$.fn.loftLabels.defaults={focus:"loft-labels-is-focus",hover:"loft-labels-is-hover",default:"loft-labels-is-default",cssPrefix:"loft-labels",callback:null,onInit:null,validationGroup:null,validationEvents:"blur paste keyup",validationThrottle:100,onValid:null,onNotValid:null,labelSelector:function(t){return t.siblings("label").first()},breakpointX:null,breakpointDefaultText:null},$.fn.loftLabels.version=function(){return"0.7.6"}}(jQuery);